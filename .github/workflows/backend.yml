name: Backend CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
    paths:
      - 'user_data/**'
      - 'config.json'
      - '.github/workflows/backend.yml'
      - 'Dockerfile.backend'
      - 'run_bot.sh'
      - 'render.yaml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'user_data/**'
      - 'config.json'
      - '.github/workflows/backend.yml'
      - 'Dockerfile.backend'
      - 'run_bot.sh'
      - 'render.yaml'
  repository_dispatch:
    types: [trigger-backend-workflow]

jobs:
  build-and-push-backend-docker:
    runs-on: ubuntu-latest
    outputs:
      docker_login_success: ${{ steps.set-output.outputs.docker_login_success }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        id: docker-login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
        continue-on-error: true
      
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        id: ghcr-login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN_PAT }}
        continue-on-error: true
      
      - name: Set outputs
        id: set-output
        if: github.event_name != 'pull_request'
        run: |
          if [ "${{ steps.docker-login.outcome }}" = "success" ]; then
            echo "docker_login_success=true" >> $GITHUB_OUTPUT
          else
            echo "docker_login_success=false" >> $GITHUB_OUTPUT
          fi
          if [ "${{ steps.ghcr-login.outcome }}" = "success" ]; then
            echo "ghcr_login_success=true" >> $GITHUB_OUTPUT
          else
            echo "ghcr_login_success=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.backend
          push: ${{ github.event_name != 'pull_request' && (steps.docker-login.outcome == 'success' || steps.ghcr-login.outcome == 'success') }}
          tags: |
            ${{ steps.docker-login.outcome == 'success' && format('{0}/freqtrade-backend:latest', secrets.DOCKER_USERNAME) || '' }}
            ${{ steps.docker-login.outcome == 'success' && format('{0}/freqtrade-backend:{1}', secrets.DOCKER_USERNAME, github.sha) || '' }}
            ${{ steps.ghcr-login.outcome == 'success' && format('ghcr.io/{0}/freqtrade-backend:latest', github.repository_owner) || '' }}
            ${{ steps.ghcr-login.outcome == 'success' && format('ghcr.io/{0}/freqtrade-backend:{1}', github.repository_owner, github.sha) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  
  deploy-to-render:
    runs-on: ubuntu-latest
    needs: build-and-push-backend-docker
    if: github.event_name != 'pull_request' && (needs.build-and-push-backend-docker.outputs.docker_login_success == 'true' || needs.build-and-push-backend-docker.outputs.ghcr_login_success == 'true')
    
    steps:
      - name: Deploy to Render
        uses: JorgeLNJunior/render-deploy@v1.4.3
        with:
          service_id: ${{ secrets.RENDER_SERVICE_ID }}
          api_key: ${{ secrets.RENDER_API_KEY }}
          wait_deploy: true
          github_token: ${{ secrets.GITHUB_TOKEN }}