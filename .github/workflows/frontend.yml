name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
      - 'Dockerfile.frontend'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
      - 'Dockerfile.frontend'
  repository_dispatch:
    types: [trigger-frontend-workflow]

jobs:
  build-and-test-frontend:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: frontend
        
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Run Tests
        run: npm test
      
      - name: Update Webpack Config for GitHub Pages
        run: |
          sed -i 's|publicPath: "/"|publicPath: "./"|g' webpack.config.js
      
      - name: Build Frontend
        run: npm run build
      
      - name: Upload Frontend Build
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/dist
  
  deploy-to-github-pages:
    runs-on: ubuntu-latest
    needs: build-and-test-frontend
    if: github.event_name != 'pull_request'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download Frontend Build
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: ./dist
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./dist
          branch: gh-pages
          clean: true
  
  build-and-push-frontend-docker:
    runs-on: ubuntu-latest
    needs: build-and-test-frontend
    outputs:
      docker_login_success: ${{ steps.set-output.outputs.docker_login_success }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download Frontend Build
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: frontend/dist
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        id: docker-login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
        continue-on-error: true
      
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        id: ghcr-login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN_PAT }}
        continue-on-error: true
      
      - name: Set outputs
        id: set-output
        if: github.event_name != 'pull_request'
        run: |
          if [ "${{ steps.docker-login.outcome }}" = "success" ]; then
            echo "docker_login_success=true" >> $GITHUB_OUTPUT
          else
            echo "docker_login_success=false" >> $GITHUB_OUTPUT
          fi
          if [ "${{ steps.ghcr-login.outcome }}" = "success" ]; then
            echo "ghcr_login_success=true" >> $GITHUB_OUTPUT
          else
            echo "ghcr_login_success=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Build and Push Frontend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.frontend
          push: ${{ github.event_name != 'pull_request' && (steps.docker-login.outcome == 'success' || steps.ghcr-login.outcome == 'success') }}
          tags: |
            ${{ steps.docker-login.outcome == 'success' && format('{0}/freqtrade-frontend:latest', secrets.DOCKER_USERNAME) || '' }}
            ${{ steps.docker-login.outcome == 'success' && format('{0}/freqtrade-frontend:{1}', secrets.DOCKER_USERNAME, github.sha) || '' }}
            ${{ steps.ghcr-login.outcome == 'success' && format('ghcr.io/{0}/freqtrade-frontend:latest', github.repository_owner) || '' }}
            ${{ steps.ghcr-login.outcome == 'success' && format('ghcr.io/{0}/freqtrade-frontend:{1}', github.repository_owner, github.sha) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max