name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test-frontend:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: frontend
        
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Run Tests
        run: npm test
      
      - name: Update Webpack Config for GitHub Pages
        run: |
          sed -i 's|publicPath: "/"|publicPath: "./"|g' webpack.config.js
      
      - name: Build Frontend
        run: npm run build
      
      - name: Upload Frontend Build
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/dist
  
  deploy-to-github-pages:
    runs-on: ubuntu-latest
    needs: build-and-test-frontend
    if: github.event_name != 'pull_request'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download Frontend Build
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: ./dist
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./dist
          branch: gh-pages
          clean: true
  
  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: build-and-test-frontend
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download Frontend Build
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: frontend/dist
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.backend
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/freqtrade-backend:latest
            ${{ secrets.DOCKER_USERNAME }}/freqtrade-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and Push Frontend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.frontend
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/freqtrade-frontend:latest
            ${{ secrets.DOCKER_USERNAME }}/freqtrade-frontend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  
  deploy-to-render:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    if: github.event_name != 'pull_request'
    
    steps:
      - name: Deploy to Render
        uses: JorgeLNJunior/render-deploy@v1.4.3
        with:
          service_id: ${{ secrets.RENDER_SERVICE_ID }}
          api_key: ${{ secrets.RENDER_API_KEY }}
          wait_deploy: true
          github_token: ${{ secrets.GITHUB_TOKEN }}